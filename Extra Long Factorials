#include <bits/stdc++.h>

using namespace std;

string ltrim(const string &);
string rtrim(const string &);

void extraLongFactorials(int n) {
    vector<int> result;
    int tmp,carry;
    result.push_back(1);
    
    for(int i=2;i<=n;i++){
        tmp = 0;
        for(int j=0;j<result.size();j++){ 
            tmp += result[j]*i; // 이전 나머지 + 현재 자릿수 계산 값을 구함
            result[j] = tmp%10; // 계산된 값의 나머지를 통해 현재 자릿수 구함
            tmp /= 10; // 다음 자릿수에 더해질 나머지값을 구함
        }
        
        while(tmp){ // 앞의 과정에서 자릿수를 초과한 경우 새로운 자릿수가 추가된 것이기 때문에 vector에 추가를 해주어야 함
            result.push_back(tmp%10); 
            tmp/=10;
        }      
    }
    
    for(int k=result.size()-1;k>=0;k--)
            cout << result[k];
    cout << endl;
}

int main()
{
    string n_temp;
    getline(cin, n_temp);

    int n = stoi(ltrim(rtrim(n_temp)));

    extraLongFactorials(n);

    return 0;
}

string ltrim(const string &str) {
    string s(str);

    s.erase(
        s.begin(),
        find_if(s.begin(), s.end(), not1(ptr_fun<int, int>(isspace)))
    );

    return s;
}

string rtrim(const string &str) {
    string s(str);

    s.erase(
        find_if(s.rbegin(), s.rend(), not1(ptr_fun<int, int>(isspace))).base(),
        s.end()
    );

    return s;
}
